<div class="title-container"></div>
<div id="title">
  <p class="main-title"></p>
  <div class="row">
    <div class="col-xs-5 sub-title"></div>
    <div class="col-xs-7 current_time"></div>
  </div>
</div>

<div id="viewDiv"></div>
<!-- 图例、帮助按钮 -->
<div class="list_btn">
  <div id="list_btn"><ul class="active_list"></ul></div>
</div>

<% unless @visitor.eql?('shweather') %>
  <div class="help_btn">
    <div id="help_btn">帮助</div>
  </div>
<% end %>
<div id="typhoon_list_d_c" class="typhoon_list_d_c active_list">
  <div class="typhoon_list_d table-responsive">
    <div class="title">热带气旋、风级、风速对照表</div>
    <table class="table table-condensed table-bordered ">
      <tr>
        <th rowspan="2">热带气旋分类</th>
        <td rowspan="2">风力等级</td>
        <td colspan="2">风速</td>
      </tr>
      <tr>
        <td>m/s</td>
        <td>km/h</td>
      </tr>
      <tr>
        <th rowspan="6">————</th>
        <td>0</td>
        <td>0.0-0.2</td>
        <td><1</td>
      </tr>
      <tr>
        <td>1</td>
        <td>0.3-1.5</td>
        <td>1-5</td>
      </tr>
      <tr>
        <td>2</td>
        <td>1.6-3.3</td>
        <td>6-11<1</td>
      </tr>
      <tr>
        <td>3</td>
        <td>3.4-5.4</td>
        <td>12-19</td>
      </tr>
      <tr>
        <td> </td>
        <td>5.5-7.9</td>
        <td>20-28</td>
      </tr>
      <tr>
        <td> </td>
        <td>8.0-10.7</td>
        <td>29-38</td>
      </tr>
      <tr>
        <th rowspan="2">热带低压TD</th>
        <td> </td>
        <td>10.8-13.8</td>
        <td>39-49</td>
      </tr>
      <tr>
        <td> </td>
        <td>13.9-17.1</td>
        <td>50-61</td>
      </tr>
      <tr>
        <th rowspan="2">热带风暴TS</th>
        <td> </td>
        <td>17.2-20.7</td>
        <td>62-74</td>
      </tr>
      <tr>
        <td> </td>
        <td>20.8-24.4</td>
        <td>75-88</td>
      </tr>
      <tr>
        <th rowspan="2">强热带风暴STS</th>
        <td> </td>
        <td>24.5-28.4</td>
        <td>89-102</td>
      </tr>
      <tr>
        <td> </td>
        <td>28.5-32.6</td>
        <td>103-117</td>
      </tr>
      <tr>
        <th rowspan="2">台风TY</th>
        <td> </td>
        <td>32.7-36.9</td>
        <td>118-133</td>
      </tr>
      <tr>
        <td> </td>
        <td>37.0-41.4</td>
        <td>134-149</td>
      </tr>
      <tr>
        <th rowspan="2">强台风STY</th>
        <td> </td>
        <td>41.5-46.1</td>
        <td>150-166</td>
      </tr>
      <tr>
        <td> </td>
        <td>46.2-50.9</td>
        <td>167-183</td>
      </tr>
      <tr>
        <th rowspan="2">超强台风SuperTY</th>
        <td> </td>
        <td>51.0-56.0</td>
        <td>184-201</td>
      </tr>
      <tr>
        <td> </td>
        <td>56.1-61.2</td>
        <td>202-220</td>
      </tr>
    </table>
  </div>
  <div id="triangle-down"></div>
</div>
<!-- 按钮组 -->
<div class="btn-group">
  <div id="btn-list" data-target="list" class="info-nr-menu glyphicon glyphicon-menu-hamburger"></div>
  <div id="btn-play" data-target="play" class="info-nr-menu glyphicon glyphicon-play"></div>
  <div id="switcher" data-target="switch" class="switch info-nr-menu glyphicon glyphicon-globe"></div>
</div>

<% if @visitor.eql?('shweather') %>
  <div class="legend">
    <div class="content unit">
      <p>预报台</p>
      <div><span class="bj">━ ━</span>中国</div>
      <div><span class="sh">━ ━</span>上海</div>
      <div><span class="hk">━ ━</span>中国香港</div>
      <div><span class="am">━ ━</span>美国</div>
      <div><span class="tw">━ ━</span>中国台湾</div>
      <div><span class="jp">━ ━</span>日本</div>
    </div>
  </div>
  <div id="visitor-logo">
    <%= image_tag("shweather_logo.png") %>
    <p>上海天气</p>
  </div>
<% end %>
<div id="tflist">
  <!-- 耳朵 -->
  <div class="tab-bar col-xs-12" id="ear_list">
    <ul class="tab">
      <!-- <li role="presentation" class="active">
        <a href="#list" aria-controls="list" role="tab" data-toggle="tab"><span id="tf-name">列表</span></a>
      </li> -->
      <li role="presentation" class="active">
        <a href="#info" aria-controls="info" role="tab" data-toggle="tab">图例</a>
      </li>
    </ul>
    <div class="hidden-container">
      <i class="glyphicon glyphicon-chevron-down"></i>
    </div>
  </div>

  <!-- 内容 -->
  <div class="row tab-content" id="tab-list-content">

    <div role="tabpanel" class="tab-pane col-xs-12 active" id="info">
    <div class="blur-bg-container"></div>
      <div class="top">
        <div class="header">
          预报台
        </div>
        <div class="content">
          <div data-target="中国" class="item bj">━ ━中国</div>
          <div data-target="中国香港" class="item hk">━ ━中国香港</div>
          <div data-target="美国" class="item am">━ ━美国</div>
          <div data-target="中国台湾" class="item tw">━ ━中国台湾</div>
          <div data-target="日本" class="item jp">━ ━日本</div>
          <div data-target="上海" class="item sh">━ ━上海</div>
        </div>
      </div>

      <div class="bottom">
        <div class="header">
          台风等级
        </div>
        <div class="content">
          <div><%= image_tag('level1.png')%>热带低压</div>
          <div><%= image_tag('level2.png')%>热带风暴</div>
          <div><%= image_tag('level3.png')%>强热带风暴</div>
          <div><%= image_tag('level4.png')%>台风</div>
          <div><%= image_tag('level5.png')%>强台风</div>
          <div><%= image_tag('level6.png')%>超强台风</div>
        </div>
      </div>

    </div>
  </div>
</div>
<div id="typhoons_selector">
  <ul></ul>
</div>
<script type="text/javascript">
  define = null;
  require = null;
</script>
<% content_for :scripts do %>
  <%= javascript_tag do %>
    typhoon_level_imgs = ['<%= image_url('level1.png') %>',
          '<%= image_url('level1.png') %>',
          '<%= image_url('level2.png') %>',
          '<%= image_url('level3.png') %>',
          '<%= image_url('level4.png') %>',
          '<%= image_url('level5.png') %>',
          '<%= image_url('level6.png') %>']
    typhoon_gif = '<%= image_url('typhoon.gif')%>'
    logo = '<%= @visitor %>'
  <% end %>
<% end %>
<script type="text/javascript">
  var useragent = navigator.userAgent;

  $(function(){

    var map = new BMap.Map("viewDiv");

    map.centerAndZoom(new BMap.Point(126.404, 16.915), 5);
    map.addControl(new BMap.MapTypeControl());
    map.enableScrollWheelZoom(true);
    map.setMinZoom(4);
    map.setMaxZoom(9);
    var radar_pic;
    var current_typhoon = [];
    var can_run = true;

    var show_units = ['上海', '中国', '中国香港', '中国台湾', '美国', '日本'];
    //初始化警戒线
    init_map();

    $(window).load(function() {
      get_more_typhoon_list();
      radarLegend();
    });

    setTimeout(function() {
      get_typhoon_list();
    }, 1000);

    // get_typhoon('1611');

    // get_typhoon('1610');

    // 菜单组事件
    $(".btn-group").on('click', 'div', function(){
      var target = $(this).attr('data-target');
      switch(target) {
        case "list":
          $('#info-nr-btn').removeClass('on');
          show_bottom_container();
          break;
        case "play":
          if ($(this).hasClass('glyphicon-minus')) {
            return;
          }
          $(this).removeClass('glyphicon-play').addClass('glyphicon-minus');
          clearTimeout(timer);
          init_map();
          // get_more_typhoon_list();
          draw_typhoon(200);
          break;
        case "switch":
          show_radar_echo();
          break;
      }
    });

    $("#tflist div.hidden-container").on('click', function() {
      $("#tflist").fadeOut(200);
    });

    function show_bottom_container() {
      $("#tflist").toggle();
    }

    function show_radar_echo() {
      if ($('#switcher').hasClass('active')) {
        map.removeOverlay(radar_pic);
        $('#switcher').removeClass('active');
        $("#list_btn > ul").addClass('active_list');
        $("#list_btn > ul").removeClass('hide_list');
        return;
      }
      var SW = new BMap.Point(71.993044552411, 3.9647143346677);
      var NE = new BMap.Point(150.81287310095, 57.863626408479);
      map.removeOverlay(radar_pic);
      radar_pic = new BMap.GroundOverlay(new BMap.Bounds(SW, NE), {opacity: .7})
      radar_pic.setImageURL('<%= @radar_echo%>');
      map.addOverlay(radar_pic);
      $('#switcher').addClass('active')
      $("#list_btn > ul").removeClass('active_list');
      $("#list_btn > ul").addClass('hide_list');
    }

    // 雷达图图例
    function radarLegend() {
      var colors = ["#AD90F0","#9600B4","#FF00F0","#C00000","#D60000","#FF0000","#FF9000","#E7C000","#FFFF00","#019000","#00D800","#00ECEC","#01A0F6"];
      var value = [70,65,60,55,50,45,40,35,30,25,20,15,10];
      var list = "";

      for(var i = 0; i < colors.length; i++) {
        var color = colors[i]
        list += "<li key='"+i+"'>"
              +"<div class='legend_color' style='background:"+color+"'></div>"
              +"<div class='legend_number'>"+value[i]+"</div>"
              +"</li>"
      }
      $("#list_btn > ul").append(list);
    }

    // 帮助图例
    $("#help_btn").on('click', function() {
      if ($('#typhoon_list_d_c').hasClass('active_list')) {
        $("#typhoon_list_d_c").removeClass('active_list');
        $("#typhoon_list_d_c").addClass('hide_list');
        return;
      }
      $("#typhoon_list_d_c").removeClass('hide_list');
      $("#typhoon_list_d_c").addClass('active_list');
    });
    // 初始化地图，添加警戒线
    function init_map() {
      map.clearOverlays();
      if (_typhoon != undefined) {
        _typhoon.setPath(null);
      }
      var polyline48 = new BMap.Polyline([
        new BMap.Point(131.984253, 33.947917),
        new BMap.Point(131.984253, 14.923554),
        new BMap.Point(119.965210, -0.043945),
        new BMap.Point(105.001831, -0.043945)
      ], {strokeColor:"blue", strokeStyle: 'dashed', strokeWeight:1, strokeOpacity:.7});

      var polyline24 = new BMap.Polyline([
        new BMap.Point(126.990967, 34.002581),
        new BMap.Point(126.990967, 21.965972),
        new BMap.Point(118.995667, 17.960445),
        new BMap.Point(118.995667, 10.968157),
        new BMap.Point(113.019104, 4.477856),
        new BMap.Point(105.001831, -0.043945)
      ], {strokeColor:"yellow", strokeWeight:1, strokeOpacity:.7});
      polyline24.disableMassClear();
      polyline48.disableMassClear();
      map.addOverlay(polyline48);
      map.addOverlay(polyline24);

      var point48 = new BMap.Point(131.984253, 27.0);
      var opts = {position: point48, offset: new BMap.Size(-8, -30)}
      var label48 = new BMap.Label('48小时警戒线', opts);
      label48.disableMassClear();
      map.addOverlay(label48);

      var point24 = new BMap.Point(126.984253, 27.0);
      opts = {position: point24, offset: new BMap.Size(-8, -30)}
      var label24 = new BMap.Label('24小时警戒线', opts);
      label24.disableMassClear();
      map.addOverlay(label24);
    }

    var level_names = ['','热带低压', '热带风暴', '强热带风暴', '台风', '强台风', '超强台风'];

    // 获取台风列表
    function get_more_typhoon_list() {
      init_map();
      $.ajax({
        type: 'get',
        async: true,
        url: 'http://api.weather-huayun.com/typhoon/typhoons?appkey=5MHJm2iLT9mQbXXlrk8RZQ',
        headers: {Accept: 'application/json'},
        success: function(json) {
          typhoons = json.list;

          var now_list = [];
          var now_list_cname = [];
          var now_list_ename = [];
          var idx;
          var typhoons_list_content = "";
          var typhoons_list_content_detail = "";
          var list_top_content = "";
          var list_top_content_text = "";

          for (idx in typhoons) {
            // 获取当前24小时内未停报台风
            var status = typhoons[idx].status;
            if (status === 'active') {
              now_list.push(typhoons[idx].serial_number);
              now_list_cname.push(typhoons[idx].cname);
              now_list_ename.push(typhoons[idx].ename);
              typhoons_list_content += "<li data-target='"+typhoons[idx].serial_number+"'>"+typhoons[idx].serial_number+"✪"+typhoons[idx].cname+"("+typhoons[idx].ename+")</li>";
            }else{
              typhoons_list_content += "<li data-target='"+typhoons[idx].serial_number+"'>"+typhoons[idx].serial_number+"✪"+typhoons[idx].cname+"("+typhoons[idx].ename+")－[停编]</li>";
            }
          }

          $("#typhoons_selector > ul").append(typhoons_list_content);
          $("#ear_list > ul").empty();
          var cont = "";
          cont += "<li role='presentation' class='active'><a href='#info' aria-controls='info' role='tab' data-toggle='tab'>图例</a></li>";
          $("#ear_list > ul").append(cont);

          // 循环显示多台风列表耳朵
          for (var i = now_list.length - 1; i >= 0; i--) {
            list_top_content += "<li role='presentation' class=''><a href='#"+now_list_ename[i]+"' aria-controls='"+now_list_ename[i]+"' role='tab' data-toggle='tab'><span id='tf"+now_list_ename[i]+"'>"+now_list_cname[i]+"</span></a></li>";
            typhoons_list_content_detail += "<div role='tabpanel' class='tab-pane tab-pane-typ col-xs-12' id='"+now_list_ename[i]+"'><div class='header'><div class='time'>时间</div><div class='narrow'>气压</div><div class='narrow'>风力</div></div><div class='typhoon-list'><ul class='typhoon-items'> </ul></div></div>";
            list_top_content_text += "<strong>"+now_list_cname[i]+"("+now_list[i]+")</strong>&nbsp&nbsp";

            $.ajax({
              type: 'get',
              async: true,
              url: 'http://api.weather-huayun.com/typhoon/typhoons/' + now_list[i] + '?appkey=5MHJm2iLT9mQbXXlrk8RZQ',
              headers: {Accept: 'application/json'},
              success: function(json) {
                var list_datas = json.real_location;
                var now_ename = json.ename
                var table_content = "";
                for (var idx = list_datas.length - 1; idx >= 0; idx--) {
                  table_content += "<li><div class='time'>"+list_datas[idx].time+"</div><div class='narrow'>"+list_datas[idx].min_pressure+"</div><div class='narrow'>"+list_datas[idx].max_wind+"</div></li>";
                }

                $("#"+now_ename+" .typhoon-items").append(table_content);

                if (now_list.length > 1) {
                  $('#title .main-title').html("目前在编报台风"+now_list.length+"个:"+list_top_content_text+"");
                }else if (now_list.length == 1) {
                  $('#title .main-title').html(now_list_cname[0]);
                  $('.current_time').html(list_datas[0].time);
                  $('#title .sub-title').html("等级:" + level_names[transform_level(list_datas[0].max_wind)]);
                }else{
                  $('#title .main-title').html("当前无活动台风");
                  $('.current_time').html("查看台风历史记录->");
                }
              },
              fail: function(json) {
                console.log(json);
              }
            });
          }
          $("#info").addClass('active');
          $("#ear_list > ul").append(list_top_content);
          $("#tab-list-content").append(typhoons_list_content_detail);

          // 初始化
          if (now_list.length > 1) {
            get_more_typhoon(now_list);
            $("#btn-play").hide();
          }else{
            get_typhoon(now_list[0]);
          }
        },
        fail: function(json) {
          console.log(json);
        }
      });
    }

    function get_typhoon_list() {
      $.ajax({
        type: 'get',
        async: true,
        url: 'http://api.weather-huayun.com/typhoon/typhoons?appkey=5MHJm2iLT9mQbXXlrk8RZQ',
        headers: {Accept: 'application/json'},
        success: function(json) {
          typhoons = json.list;
          var idx;
          var typhoons_list_content = "";
          for (idx in typhoons) {
            typhoons_list_content += "<li data-target='"+typhoons[idx].serial_number+"'>"+typhoons[idx].cname+"("+typhoons[idx].ename+")</li>";
          }
          // $("#typhoons_selector > ul").append(typhoons_list_content);
        },
        fail: function(json) {
          console.log(json);
        }
      });
    }

    function transform_level(level) {
      if (level >= 10.8 && level <= 17.1) {
        return 1;
      } else if (level >= 17.2 && level <= 24.4) {
        return 2;
      } else if (level >= 24.5 && level <= 32.6) {
        return 3;
      } else if (level >= 32.7 && level <= 41.4) {
        return 4;
      } else if (level >= 41.5 && level <= 50.9) {
        return 5;
      } else if (level >= 51) {
        return 6;
      } else {
        return 0;
      }
    }

    function get_wind_level(level) {
      if (level <= 0.2) {
        return 0;
      } else if (level >= 0.3 && level <= 1.5) {
        return 1;
      } else if (level >= 1.6 && level <= 3.3) {
        return 2;
      } else if (level >= 3.4 && level <= 5.4) {
        return 3;
      } else if (level >= 5.5 && level <= 7.9) {
        return 4;
      } else if (level >= 8.0 && level <= 10.7) {
        return 5;
      } else if (level >= 10.8 && level <= 13.8) {
        return 6;
      } else if (level >= 13,9 && level <= 17.1) {
        return 7;
      } else if (level >= 17.2 && level <= 20.7) {
        return 8;
      } else if (level >= 20.8 && level <= 24.4) {
        return 9;
      } else if (level >= 24.5 && level <= 28.4) {
        return 10;
      } else if (level >= 28.5 && level <= 32.6) {
        return 11;
      } else if (level > 32.6 && level <= 36.9) {
        return 12;
      } else if (level >= 37 && level <= 41.4) {
        return 13;
      } else if (level >= 41.5 && level <= 46.1) {
        return 14;
      } else if (level >= 46.2 && level <= 50.9) {
        return 15;
      } else if (level >= 51 && level <= 56) {
        return 16;
      } else if (level >= 56.1) {
        return 17;
      } else {
        return 0;
      }
    }

    function get_typhoon(typhoon_id) {
      $("#btn-play").show();
      init_map();
      $.ajax({
        type: 'get',
        async: true,
        url: 'http://api.weather-huayun.com/typhoon/typhoons/' + typhoon_id + '?appkey=5MHJm2iLT9mQbXXlrk8RZQ',
        headers: {Accept: 'application/json'},
        success: function(json) {
          current_typhoon.first = json;
          // 获取当前12小时内未停报台风
            if (json.status === 'active') {
              $('#title .main-title').html(json.serial_number + "✪" + json.cname + " ("+ json.ename +")");
            }else{
              $('#title .main-title').html(json.name + "✪" + json.cname + " ("+ json.ename +")-[停编]");
            }
          //点击列表按钮弹框耳朵，文字设置（台风名称）
          $("#ear_list > ul").empty();
          var content = "";
          var typhoons_list_content_detail = "";

          content += "<li role='presentation' class='active'><a href='#info' aria-controls='info' role='tab' data-toggle='tab'>图例</a></li><li role='presentation' class=''><a href='#"+json.ename+"' aria-controls='"+json.ename+"' role='tab' data-toggle='tab'><span id='tf"+json.ename+"'>"+json.cname+"</span></a></li>";
          typhoons_list_content_detail += "<div role='tabpanel' class='tab-pane tab-pane-typ col-xs-12' id='"+json.ename+"'><div class='header'><div class='time'>时间</div><div class='narrow'>气压</div><div class='narrow'>风力</div></div><div class='typhoon-list'><ul class='typhoon-items'> </ul></div></div>";

          $("#info").addClass('active');
          $("#ear_list > ul").append(content);
          $("#tab-list-content").append(typhoons_list_content_detail);
          // 设置浏览器标题显示信息
          $("head title").html(build_title(json));
          var num = current_typhoon.first.real_location.length-1
          var first_point = current_typhoon.first.real_location[num]
          map.panTo(new BMap.Point(first_point.lon, first_point.lat));
          // 动态打点添加台风路径
          setTimeout(function(){
            draw_typhoon();
          }, 500);
          var list_datas = json.real_location;
          var table_content = "";
          for (var idx = list_datas.length - 1; idx >= 0; idx--) {
            table_content += "<li><div class='time'>"+list_datas[idx].time+"</div><div class='narrow'>"+list_datas[idx].min_pressure+"</div><div class='narrow'>"+list_datas[idx].max_wind+"</div></li>";
          }
          $("#"+json.ename+" .typhoon-items").append(table_content);
        },
        fail: function(json) {
          console.log(json);
        }
      });
    }

    // 初始化多台风路径显示
    var _typhoon1 = [];
    var curr_more_point_idx = [0,0,0];
    var timer1 = [];

    function get_more_typhoon(typhoons) {
      init_map();
      var points1 = new Array();
      for (var idx = typhoons.length - 1; idx >= 0; idx--) {
        $.ajax({
          type: 'get',
          async: true,
          url: 'http://api.weather-huayun.com/typhoon/typhoons/' + typhoons[idx] + '?appkey=5MHJm2iLT9mQbXXlrk8RZQ',
          headers: {Accept: 'application/json'},
          success: function(json) {
            points1[idx]= new Array();
            current_typhoon[idx] = json;
            // $('#title .main-title').html(json.name + json.cname + " ("+ json.ename +")");
            if (current_typhoon[idx].status == 'stop') {
              $('#title .main-title').append(' 停止编报');
            }
            //点击列表按钮弹框耳朵，文字设置（台风名称）
            // $('#tf-name').html("("+json.name+")"+json.cname);
            // 设置浏览器标题显示信息
            $("head title").html("台风路径实时发布系统");
            var first_point = current_typhoon[idx].real_location[0]
            map.panTo(new BMap.Point(first_point.lon, first_point.lat));

            _typhoon1[idx] = new BMap.Polyline(points1[idx], {strokeColor:"#9B9B9B", strokeWeight:1.5, strokeOpacity:1});

            var typ = _typhoon1[idx];
            var c_typ = current_typhoon[idx];
            var pot = points1[idx];
            var i = idx;

            timer1[idx] = json.ename

            var time = timer1[idx]
            var _pt_icon1;
            var typhoon_gif_mark1;

            // 动态打点添加台风路径
            draw_more_typhoon(50,typ,c_typ,pot,0, _pt_icon1, typhoon_gif_mark1, time);

          },
          fail: function(json) {
            console.log(json);
          }
        });

      }
    }

    function draw_more_typhoon(d,typhoon_more,current_more_typhoon,points1_more,idx, _pt_icon1, typhoon_gif_mark1, time) {
      can_run = false;
      if (d == undefined) {
        d = 50;
      }

      var _ptm;
      var real_location = current_more_typhoon.real_location;
      if (real_location[curr_more_point_idx[idx]] == undefined) {
        show_wind_radius(real_location[curr_more_point_idx[idx] - 1]);
        curr_more_point_idx[idx] = 0;
        points1_more.length = 0;
        // clearTimeout(time);
        if (current_more_typhoon.status != 'stop') {
          show_more_forecast(current_more_typhoon);
        }
        return;
      }

      // 动态打点，添加台风路径
      // time = setTimeout(function(){
        map.addOverlay(typhoon_more);
        var _current_pt = real_location[curr_more_point_idx[idx]];
        point = new BMap.Point(_current_pt.lon, _current_pt.lat)
        map.removeOverlay(typhoon_gif_mark1);
        // 设置台风图标
        var typhoon_gif_icon = new BMap.Icon(typhoon_gif, new BMap.Size(40,40));
        typhoon_gif_icon.setImageSize(new BMap.Size(40,40));

        var opts = {
          position : point,    // 指定文本标注所在的地理位置
          offset   : new BMap.Size(0, 30)    //设置文本偏移量
        }
        var typhoon_label = new BMap.Label("<div class='typhoon_label'>"+current_more_typhoon.cname+"</div>", opts)
        typhoon_label.setStyle({
             color : "black",
             fontSize : "12px",
             height : "20px",
             lineHeight : "20px",
             fontFamily:"微软雅黑",
         });
        // map.addOverlay(typhoon_label);

        var typ_opts = {
          icon: typhoon_gif_icon
        }
        typhoon_gif_mark1 = new BMap.Marker(point, typ_opts);

        typhoon_gif_mark1.setLabel(typhoon_label)
        // //添加标注
        // var sContent =current_more_typhoon.cname;
        // var infoWindow = new BMap.InfoWindow(sContent);  // 创建信息窗口对象
        // console.log(current_more_typhoon);
        // map.openInfoWindow(infoWindow,point); //开启信息窗口


        map.addOverlay(typhoon_gif_mark1);
        points1_more.push(point);
        typhoon_more.setPath(points1_more);
        _pt_icon1 = new BMap.Icon(typhoon_level_imgs[transform_level(_current_pt.max_wind)], new BMap.Size(10,10));
        _pt_icon1.setImageSize(new BMap.Size(10,10));
        _ptm = new BMap.Marker(point, {icon: _pt_icon1});
        // $('.current_time').html(_current_pt.time);
        // $('#title .sub-title').html("等级:" + level_names[transform_level(_current_pt.max_wind)]);
        var content = build_content(_current_pt);

        addClickHandler(content, _ptm, current_more_typhoon);
        map.addOverlay(_ptm);
        curr_more_point_idx[idx] += 1;
        draw_more_typhoon(d,typhoon_more,current_more_typhoon,points1_more,idx,_pt_icon1, typhoon_gif_mark1, time);
      // }, d);
    }


    var _typhoon3;
    function show_more_forecast(current_more_typhoon) {
      var size, _ptm, curr_point_idx2;
      var curr_point_obj = current_more_typhoon.real_location[current_more_typhoon.real_location.length - 1];
      var curr_point = new BMap.Point(curr_point_obj.lon, curr_point_obj.lat);
      var forecast_location = current_more_typhoon.forecast_location;
      for (size in forecast_location) {
        var items = forecast_location[size];
        if ($.inArray((items[0] && items[0].unit), show_units) < 0) {
          continue;
        }
        var _path = [curr_point]
        var curr_path_idx;
        var point;

        var _typhoon3 = new BMap.Polyline(_path, {strokeColor: dept_color(forecast_location[size][0].unit), strokeStyle: 'dashed', strokeWeight:2, strokeOpacity:1});
        var _current_pt, content;
        for (curr_point_idx2 in items) {
          _current_pt = items[curr_point_idx2];
          point = new BMap.Point(_current_pt.lon, _current_pt.lat)
          _path.push(point);
          _typhoon3.setPath(_path);
          _pt_icon = new BMap.Icon(typhoon_level_imgs[transform_level(_current_pt.max_wind)], new BMap.Size(10,10));
          _pt_icon.setImageSize(new BMap.Size(10,10));
          _ptm = new BMap.Marker(point, {icon: _pt_icon});
          content = build_content(_current_pt);
          addClickHandler(content, _ptm, current_more_typhoon);
          map.addOverlay(_ptm);
        }
        map.addOverlay(_typhoon3);
      }
      can_run = true;
      $('.btn-group > .glyphicon-minus').removeClass('glyphicon-minus').addClass('glyphicon-play');
    }


    // 设置浏览器标题显示信息
    function build_title(json) {
      var current_location = json.real_location[json.real_location.length - 1];
      var content = "";
      if (logo == 'shweather') {
        content = "【上海天气】台风";
        content += "("+json.cname+") 路径实时发布系统";
      } else {
        if (json.status === 'active') {
          content += json.serial_number + "号"+level_names[transform_level(current_location.max_wind)] + json.cname + "("+json.ename+") ";
        } else {
          content += json.name + "号"+level_names[transform_level(current_location.max_wind)] + json.cname + "("+json.ename+") ";
        }
        content += current_location.time;
        if (current_location.max_wind != 9999) {
          content += " 风速: " + current_location.max_wind;
        }
        content += " 东经: " + current_location.lon + "°";
        content += " 北纬: " + current_location.lat + "°";
        if (current_location.direct != 9999) {
          content += " 气压: " + current_location.direct;
        }
        content += " 近中心最大气压: " + current_location.max_wind;
      }

      return content;
    }

    var curr_point_idx = 0;
    var points = [];
    var timer;
    var _typhoon = new BMap.Polyline(points, {strokeColor:"#9B9B9B", strokeWeight:1.5, strokeOpacity:1});

    var _pt_icon;
    var typhoon_gif_mark;

    function draw_typhoon(d) {
      can_run = false;
      if (d == undefined) {
        d = 50;
      }
      var _ptm;
      var real_location = current_typhoon.first.real_location;
      if (real_location[curr_point_idx] == undefined) {

        show_wind_radius(real_location[curr_point_idx - 1]);
        curr_point_idx = 0;
        points.length = 0;
        clearTimeout(timer);
        if (current_typhoon.first.status != 'stop') {
          show_forecast();
        }
        return;
      }

      // 动态打点，添加台风路径
      timer = setTimeout(function(){
        map.addOverlay(_typhoon);
        var _current_pt = real_location[curr_point_idx];
        point = new BMap.Point(_current_pt.lon, _current_pt.lat)
        map.removeOverlay(typhoon_gif_mark);
        // 设置台风图标
        var typhoon_gif_icon = new BMap.Icon(typhoon_gif, new BMap.Size(40,40));
        typhoon_gif_icon.setImageSize(new BMap.Size(40,40));
        typhoon_gif_mark = new BMap.Marker(point, {icon: typhoon_gif_icon});

        map.addOverlay(typhoon_gif_mark);
        points.push(point);
        _typhoon.setPath(points);
        _pt_icon = new BMap.Icon(typhoon_level_imgs[transform_level(_current_pt.max_wind)], new BMap.Size(10,10));
        _pt_icon.setImageSize(new BMap.Size(10,10));
        _ptm = new BMap.Marker(point, {icon: _pt_icon});
        $('.current_time').html(_current_pt.time);
        $('#title .sub-title').html("等级:" + level_names[transform_level(_current_pt.max_wind)]);
        var content = build_content(_current_pt);

        addClickHandler(content, _ptm, current_typhoon.first);
        map.addOverlay(_ptm);
        curr_point_idx += 1;
        draw_typhoon(d);
      }, d);
    }

    var _typhoon2;
    function show_forecast() {
      var size, _ptm, curr_point_idx2;
      var curr_point_obj = current_typhoon.first.real_location[current_typhoon.first.real_location.length - 1];
      var curr_point = new BMap.Point(curr_point_obj.lon, curr_point_obj.lat);
      var forecast_location = current_typhoon.first.forecast_location;
      for (size in forecast_location) {
        var items = forecast_location[size];
        if ($.inArray((items[0] && items[0].unit), show_units) < 0) {
          continue;
        }
        var _path = [curr_point]
        var curr_path_idx;
        var point;

        var _typhoon2 = new BMap.Polyline(_path, {strokeColor: dept_color(forecast_location[size][0].unit), strokeStyle: 'dashed', strokeWeight:2, strokeOpacity:1});
        var _current_pt, content;
        for (curr_point_idx2 in items) {
          _current_pt = items[curr_point_idx2];
          point = new BMap.Point(_current_pt.lon, _current_pt.lat)
          _path.push(point);
          _typhoon2.setPath(_path);
          _pt_icon = new BMap.Icon(typhoon_level_imgs[transform_level(_current_pt.max_wind)], new BMap.Size(10,10));
          _pt_icon.setImageSize(new BMap.Size(10,10));
          _ptm = new BMap.Marker(point, {icon: _pt_icon});
          content = build_content(_current_pt);
          addClickHandler(content, _ptm, current_typhoon.first);
          map.addOverlay(_ptm);
        }
        map.addOverlay(_typhoon2);
      }
      can_run = true;
      $('.btn-group > .glyphicon-minus').removeClass('glyphicon-minus').addClass('glyphicon-play');
    }

    var seven_wind_radius, ten_wind_radius;
    function show_wind_radius(target) {
      map.removeOverlay(seven_wind_radius);
      map.removeOverlay(ten_wind_radius);
      var seven_wind_radius = new BMap.Circle(new BMap.Point(target.lon, target.lat), target.seven_radius * 1000, {strokeColor:"#43af4d", fillColor: '#43af4d', fillOpacity: 0.4, strokeWeight: 0.2, strokeOpacity:0.8});
      var ten_wind_radius = new BMap.Circle(new BMap.Point(target.lon, target.lat), target.ten_radius * 1000, {strokeColor:"#ce6a2d", fillColor: '#ce6a2d', fillOpacity: 0.4, strokeWeight: 0.5, strokeOpacity:0.8});
      map.addOverlay(seven_wind_radius);
      map.addOverlay(ten_wind_radius);
    }

    function addClickHandler(content, marker, typhoon_more) {
      marker.addEventListener('click', function(e) {
        show_tips(content, e, typhoon_more);
      });
    }

    function show_tips(content, e, typhoon_more){
      var infowindow = new BMap.InfoWindow(content,{width:180,height:130,title: "[" + typhoon_more.serial_number + "] " + typhoon_more.cname});
      map.openInfoWindow(infowindow,e.target.point);
    }


    function dept_color(dept) {
      var _color = "";
      if (dept == "中国") {
        _color = "#FF4050";
      } else if (dept == "中国香港") {
        _color = "#ff40f5";
      } else if (dept == "美国") {
        _color = "#40DDFF";
      } else if (dept == "中国台湾") {
        _color = "#FFA040";
      } else if (dept == "日本") {
        _color = "#43FF4B";
      } else {
        _color = "#000";
      }
      return _color;
    }

    function build_content(point) {
      var content = "<p>数据时间: " + point.time + "</p>";
      if (point.unit != null) {
        content += "<p>预报机构: "+ point.unit+"</p>";
      } else {
        content += "<p>预报机构: —</p>";
      }
      content += "<p>中心位置: " + point.lon + '°, ' + point.lat + "°</p>";
      content += "<p>最大风力: " + get_wind_level(point.max_wind) + " 级("+level_names[transform_level(point.max_wind)]+")</p>";
      if (point.max_wind == null && point.max_wind == 9999) {
        content += "<p>最大风速: - 米/秒</p>";
      } else {
        content += "<p>最大风速: " + point.max_wind + " 米/秒</p>";
      }
      content += "<p>中心气压: " + ((point.min_pressure == null || point.min_pressure == 9999) ? "-" : point.min_pressure) + " 百帕</p>";
      if (point.seven_radius != null && point.seven_radius != 9999) {
        content += "<p>七级半径: " + point.seven_radius + " 公里</p>";
      } else {
        content += "<p>七级半径: — </p>";
      }
      if (point.ten_radius != null && point.ten_radius != 9999) {
        content += "<p>十级半径: " + point.ten_radius + " 公里</p>";
      } else {
        content += "<p>十级半径: — </p>";
      }

      return content;
    }

    $("#info").on('click', '.item', function(evt) {
      var _target = $(this).attr("data-target");
      $(this).toggleClass('gray');
      init_map();
      if ($(this).hasClass('gray')) {
          show_units.splice($.inArray(_target,show_units),1);
      } else {
        show_units.push(_target);
      }
      clearTimeout(timer);
      _typhoon.setPath(null);
      draw_typhoon(200);
    });

    $('#title').on('click', function(evt) {
      show_selector();
    });

    $('#typhoons_selector').on('click', 'li', function() {
      $(this).parent().children().removeClass('active');
      $(this).addClass('active');
      $("#typhoons_selector").hide();
      get_typhoon($(this).attr("data-target"));
    })

    function show_selector() {
      $("#typhoons_selector").show();
    }
    map.addEventListener('click', function() {
      $("#typhoons_selector").hide();
    });

    $(document).on('click', function(e){
      if ($(e.target).closest('#title').length == 0) {
        $("#typhoons_selector").hide();
      } else {
        show_selector();
      }
    });

  });
</script>
