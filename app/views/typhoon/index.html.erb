<div class="title-container"></div>
<div id="title">
  <p class="main-title"></p>
  <div class="row">
    <div class="col-xs-5 sub-title"></div>
    <div class="col-xs-7 current_time"></div>
  </div>
</div>  

<div id="viewDiv"></div>
<!-- 按钮组 -->
<div class="btn-group">
  <div data-target="list" class="info-nr-menu glyphicon glyphicon-menu-hamburger"></div>
  <div data-target="play" class="info-nr-menu glyphicon glyphicon-play"></div>
  <div id="switcher" data-target="switch" class="switch info-nr-menu glyphicon glyphicon-globe"></div>
</div>

<% if @visitor.eql?('shweather') %>
  <div class="legend">
    <div class="content unit">
      <p>预报台</p>
      <div><span class="bj">━ ━</span>中国</div>
      <div><span class="sh">━ ━</span>上海</div>  
      <div><span class="hk">━ ━</span>中国香港</div>
      <div><span class="am">━ ━</span>美国</div>
      <div><span class="tw">━ ━</span>中国台湾</div>
      <div><span class="jp">━ ━</span>日本</div>
    </div> 
  </div>
  <div id="visitor-logo">
    <%= image_tag("shweather_logo.png") %>
    <p>上海天气</p>    
  </div>
<% end %>
<div id="tflist">
  <!-- 耳朵 -->
  <div class="tab-bar col-xs-12">
    <ul class="tab">
      <li role="presentation" class="active">
        <a href="#list" aria-controls="list" role="tab" data-toggle="tab"><span id="tf-name">列表</span></a>
      </li>
      <li role="presentation" class="">
        <a href="#info" aria-controls="info" role="tab" data-toggle="tab">图例</a>
      </li>
    </ul>
    <div class="hidden-container">
      <i class="glyphicon glyphicon-chevron-down"></i>
    </div>
  </div>

  <!-- 内容 -->
  <div class="row tab-content">
    <div role="tabpanel" class="tab-pane col-xs-12 active" id="list">
      <div class="header"><div class="time">时间</div><div class="narrow">气压</div><div class="narrow">风力</div></div>
      <div class="typhoon-list">
        <!-- <div class="blur-bg-container"></div> -->
        <ul class="typhoon-items">
          
        </ul>  
      </div>
    </div>

    <div role="tabpanel" class="tab-pane col-xs-12" id="info">
    <div class="blur-bg-container"></div>
      <div class="top">
        <div class="header">
          预报台
        </div>  
        <div class="content">
          <div data-target="中国" class="item bj">━ ━中国</div>  
          <div data-target="中国香港" class="item hk">━ ━中国香港</div>
          <div data-target="美国" class="item am">━ ━美国</div>
          <div data-target="中国台湾" class="item tw">━ ━中国台湾</div>
          <div data-target="日本" class="item jp">━ ━日本</div>
          <div data-target="上海" class="item sh">━ ━上海</div>
        </div>  
      </div>

      <div class="bottom">
        <div class="header">
          台风等级
        </div>  
        <div class="content">
          <div><%= image_tag('level1.png')%>热带低压</div> 
          <div><%= image_tag('level2.png')%>热带风暴</div> 
          <div><%= image_tag('level3.png')%>强热带风暴</div> 
          <div><%= image_tag('level4.png')%>台风</div> 
          <div><%= image_tag('level5.png')%>强台风</div> 
          <div><%= image_tag('level6.png')%>超强台风</div> 
        </div>  
      </div>
      
    </div>
  </div>
</div>
<div id="typhoons_selector">
  <ul></ul>
</div>
<script type="text/javascript">
  define = null;
  require = null;
</script>
<% content_for :scripts do %>
  <%= javascript_tag do %>
    typhoon_level_imgs = ['<%= image_url('level1.png') %>',
          '<%= image_url('level1.png') %>', 
          '<%= image_url('level2.png') %>', 
          '<%= image_url('level3.png') %>', 
          '<%= image_url('level4.png') %>', 
          '<%= image_url('level5.png') %>', 
          '<%= image_url('level6.png') %>']
    typhoon_gif = '<%= image_url('typhoon.gif')%>'
    logo = '<%= @visitor %>'
  <% end %>
<% end %>
<script type="text/javascript">
  var useragent = navigator.userAgent;
  // if (useragent.match(/MicroMessenger/i) != 'MicroMessenger') {
  //     alert('已禁止本次访问：您必须使用微信内置浏览器访问本页面！');
  //     var opened = window.open('about:blank', '_self');
  //     opened.opener = null;
  //     opened.close();
  // }
  
  $(function(){
//   wx.config({
//     debug: false,
//     appId: 'wxf8b4f85f3a794e77',
//     timestamp: 1420774989,
//     nonceStr: '2nDgiWM7gCxhL8v0',
//     signature: '1f8a6552c1c99991fc8bb4e2a818fe54b2ce7687',
//     jsApiList: [
//       'checkJsApi',
//       'onMenuShareTimeline',
//       'onMenuShareAppMessage',
//       'onMenuShareQQ',
//       'onMenuShareWeibo',
//       'hideMenuItems',
//       'showMenuItems',
//       'hideAllNonBaseMenuItem',
//       'showAllNonBaseMenuItem',
//       'translateVoice',
//       'startRecord',
//       'stopRecord',
//       'onRecordEnd',
//       'playVoice',
//       'pauseVoice',
//       'stopVoice',
//       'uploadVoice',
//       'downloadVoice',
//       'chooseImage',
//       'previewImage',
//       'uploadImage',
//       'downloadImage',
//       'getNetworkType',
//       'openLocation',
//       'getLocation',
//       'hideOptionMenu',
//       'showOptionMenu',
//       'closeWindow',
//       'scanQRCode',
//       'chooseWXPay',
//       'openProductSpecificView',
//       'addCard',
//       'chooseCard',
//       'openCard'
//     ]
//   });  

//   wx.onMenuShareAppMessage({
//           title: '123',
//           desc: 'bac',
//           link: 'www.baidu.com',
//           imgUrl: '',
//           trigger: function (res) {
//             // 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
//             // alert('用户点击发送给朋友');
//           },
//           success: function (res) {
//             // alert('已分享');
//           },
//           cancel: function (res) {
//             // alert('已取消');
//           },
//           fail: function (res) {
//             // alert(JSON.stringify(res));
//           }
//         });

//         wx.onMenuShareTimeline({
//           title: 'abc',
//           link: '123',
//           imgUrl: '',
//           trigger: function (res) {
//             // 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
//             // alert('用户点击分享到朋友圈');
//           },
//           success: function (res) {
//             // alert('已分享');
//           },
//           cancel: function (res) {
//             // alert('已取消');
//           },
//           fail: function (res) {
//             // alert(JSON.stringify(res));
//           }
//         });

// wx.checkJsApi({
//             jsApiList: [
//                 'getLocation',
//                 'onMenuShareTimeline',
//                 'onMenuShareAppMessage'
//             ],
//             success: function (res) {
//                 alert(JSON.stringify(res));
//             }
//         });

    var map = new BMap.Map("viewDiv");

    map.centerAndZoom(new BMap.Point(126.404, 16.915), 5);
    map.addControl(new BMap.MapTypeControl());
    map.enableScrollWheelZoom(true);
    map.setMinZoom(4);
    map.setMaxZoom(9);
    var radar_pic;
    var current_typhoon;
    var can_run = true;

    var show_units = ['上海', '中国', '中国香港', '中国台湾', '美国', '日本'];
    // // 初始化警戒线
    init_map();

    setTimeout(function() {
      get_typhoon_list();  
    }, 1000);
    
    get_typhoon('9999');

    // 菜单组事件
    $(".btn-group").on('click', 'div', function(){
      var target = $(this).attr('data-target');
      switch(target) {
        case "list":
          $('#info-nr-btn').removeClass('on');
          show_bottom_container();
          break;
        case "play":
          if ($(this).hasClass('glyphicon-minus')) {
            return;
          }
          $(this).removeClass('glyphicon-play').addClass('glyphicon-minus');
          clearTimeout(timer);
          init_map();
          draw_typhoon(200);
          break;
        case "switch":
          show_radar_echo();
          break;
      }
    });

    $("#tflist div.hidden-container").on('click', function() {
      $("#tflist").fadeOut(200);
    });

    function show_bottom_container() {
      $("#tflist").toggle();
    }

    function show_radar_echo() {
      if ($('#switcher').hasClass('active')) {
        map.removeOverlay(radar_pic);
        $('#switcher').removeClass('active');
        return;
      }
      var SW = new BMap.Point(71.993044552411,3.9647143346677);
      var NE = new BMap.Point(134.81287310095,57.863626408479);
      map.removeOverlay(radar_pic);
      radar_pic = new BMap.GroundOverlay(new BMap.Bounds(SW, NE), {opacity: .7})
      radar_pic.setImageURL('<%= @radar_echo%>');
      map.addOverlay(radar_pic);
      $('#switcher').addClass('active')
    }

    function init_map() {
      map.clearOverlays();
      if (_typhoon != undefined) {
        _typhoon.setPath(null);  
      }
      var polyline48 = new BMap.Polyline([
        new BMap.Point(131.984253, 33.947917),
        new BMap.Point(131.984253, 14.923554),
        new BMap.Point(119.965210, -0.043945),
        new BMap.Point(105.001831, -0.043945)
      ], {strokeColor:"blue", strokeStyle: 'dashed', strokeWeight:1, strokeOpacity:.7});
      
      var polyline24 = new BMap.Polyline([
        new BMap.Point(126.990967, 34.002581),
        new BMap.Point(126.990967, 21.965972),
        new BMap.Point(118.995667, 17.960445),
        new BMap.Point(118.995667, 10.968157),
        new BMap.Point(113.019104, 4.477856),
        new BMap.Point(105.001831, -0.043945)
      ], {strokeColor:"yellow", strokeWeight:1, strokeOpacity:.7});
      polyline24.disableMassClear();
      polyline48.disableMassClear();
      map.addOverlay(polyline48);
      map.addOverlay(polyline24);

      var point48 = new BMap.Point(131.984253, 27.0);
      var opts = {position: point48, offset: new BMap.Size(-8, -30)}
      var label48 = new BMap.Label('48小时警戒线', opts);
      label48.disableMassClear();
      map.addOverlay(label48);

      var point24 = new BMap.Point(126.984253, 27.0);
      opts = {position: point24, offset: new BMap.Size(-8, -30)}
      var label24 = new BMap.Label('24小时警戒线', opts);
      label24.disableMassClear();
      map.addOverlay(label24);
    }

    var level_names = ['','热带低压', '热带风暴', '强热带风暴', '台风', '强台风', '超强台风'];
    function get_typhoon_list() {
      $.ajax({
        type: 'get',
        async: true,
        url: 'http://61.152.122.112:8080/api/v1/pri_typhoons?appid=ZfQg2xyW04X3umRPsi9H&appkey=xWOX5kAYVSduEl38oJctyRgB2NDMpH',
        headers: {Accept: 'application/json'},
        success: function(json) {
          typhoons = json.list;
          var idx;
          var typhoons_list_content = "";
          for (idx in typhoons) {
            typhoons_list_content += "<li data-target='"+typhoons[idx].serial_number+"'>"+typhoons[idx].cname+"("+typhoons[idx].ename+")</li>";
          }
          $("#typhoons_selector > ul").append(typhoons_list_content);
        },
        fail: function(json) {
          console.log(json);
        }
      });
    }

    function transform_level(level) {
      if (level >= 10.8 && level <= 17.1) {
        return 1;
      } else if (level >= 17.2 && level <= 24.4) {
        return 2;
      } else if (level >= 24.5 && level <= 32.6) {
        return 3;
      } else if (level >= 32.7 && level <= 41.4) {
        return 4;
      } else if (level >= 41.5 && level <= 50.9) {
        return 5;
      } else if (level >= 51) {
        return 6;
      } else {
        return 0;
      }
    }

    function get_wind_level(level) {
      if (level <= 0.2) {
        return 0;
      } else if (level >= 0.3 && level <= 1.5) {
        return 1;
      } else if (level >= 1.6 && level <= 3.3) {
        return 2;
      } else if (level >= 3.4 && level <= 5.4) {
        return 3;
      } else if (level >= 5.5 && level <= 7.9) {
        return 4;
      } else if (level >= 8.0 && level <= 10.7) {
        return 5;
      } else if (level >= 10.8 && level <= 13.8) {
        return 6;
      } else if (level >= 13,9 && level <= 17.1) {
        return 7;
      } else if (level >= 17.2 && level <= 20.7) {
        return 8;
      } else if (level >= 20.8 && level <= 24.4) {
        return 9;
      } else if (level >= 24.5 && level <= 28.4) {
        return 10;
      } else if (level >= 28.5 && level <= 32.6) {
        return 11;
      } else if (level > 32.6 && level <= 36.9) {
        return 12;
      } else if (level >= 37 && level <= 41.4) {
        return 13;
      } else if (level >= 41.5 && level <= 46.1) {
        return 14;
      } else if (level >= 46.2 && level <= 50.9) {
        return 15;
      } else if (level >= 51 && level <= 56) {
        return 16;
      } else if (level >= 56.1) {
        return 17;
      } else {
        return 0;
      }
    }

    function get_typhoon(typhoon_id) {
      init_map();
      $.ajax({
        type: 'get',
        async: true,
        url: 'http://61.152.122.112:8080/api/v1/pri_typhoons/'+typhoon_id+'?appid=ZfQg2xyW04X3umRPsi9H&appkey=xWOX5kAYVSduEl38oJctyRgB2NDMpH',
        headers: {Accept: 'application/json'},
        success: function(json) {
          current_typhoon = json;

          $('#title .main-title').html(json.name + json.cname + " ("+ json.ename +")");
          if (current_typhoon.status == 'stop') {
            $('#title .main-title').append(' 停止编报');
          }
          $('#tf-name').html("("+json.name+")"+json.cname);
          $("head title").html(build_title(json));
          var first_point = current_typhoon.real_location[0]
          map.panTo(new BMap.Point(first_point.lon, first_point.lat));
          setTimeout(function(){
            draw_typhoon();
          }, 500);
          var list_datas = json.real_location;
          var table_content = "";
          for (var idx = list_datas.length - 1; idx >= 0; idx--) {
            table_content += "<li><div class='time'>"+list_datas[idx].time+"</div><div class='narrow'>"+list_datas[idx].min_pressure+"</div><div class='narrow'>"+list_datas[idx].max_wind+"</div></li>";
          }
          
          $("#list .typhoon-items").append(table_content);
        },
        fail: function(json) {
          console.log(json);
        }
      });
    }

    function build_title(json) {
      var current_location = json.real_location[json.real_location.length - 1];
      var content = "";
      if (logo == 'shweather') {
        content = "【上海天气】台风";
        content += "("+json.cname+") 路径实时发布系统";
      } else {
        content += json.name + "号"+level_names[transform_level(current_location.max_wind)] + json.cname + "("+json.ename+") ";
        content += current_location.time;
        if (current_location.max_wind != 9999) {
          content += " 风速: " + current_location.max_wind;
        }
        content += " 东经: " + current_location.lon + "°";
        content += " 北纬: " + current_location.lat + "°";
        if (current_location.direct != 9999) {
          content += " 气压: " + current_location.direct;  
        }
        content += " 近中心最大气压: " + current_location.max_wind;  
      }
      
      return content;
    }

    var curr_point_idx = 0;
    var points = [];
    var timer;
    var _typhoon = new BMap.Polyline(points, {strokeColor:"#9B9B9B", strokeWeight:1.5, strokeOpacity:1});
    
    var _pt_icon;
    var typhoon_gif_mark;

    function draw_typhoon(d) {
      can_run = false;
      if (d == undefined) {
        d = 50;
      }
      var _ptm;
      var real_location = current_typhoon.real_location;
      if (real_location[curr_point_idx] == undefined) {
        
        show_wind_radius(real_location[curr_point_idx - 1]);
        curr_point_idx = 0;
        points.length = 0;
        clearTimeout(timer);
        if (current_typhoon.status != 'stop') {
          show_forecast();  
        }
        return;
      }

      timer = setTimeout(function(){
        map.addOverlay(_typhoon);
        var _current_pt = real_location[curr_point_idx];
        point = new BMap.Point(_current_pt.lon, _current_pt.lat)
        map.removeOverlay(typhoon_gif_mark);
        var typhoon_gif_icon = new BMap.Icon(typhoon_gif, new BMap.Size(40,40));
        typhoon_gif_icon.setImageSize(new BMap.Size(40,40));
        typhoon_gif_mark = new BMap.Marker(point, {icon: typhoon_gif_icon});
        map.addOverlay(typhoon_gif_mark);
        points.push(point);
        _typhoon.setPath(points);
        _pt_icon = new BMap.Icon(typhoon_level_imgs[transform_level(_current_pt.max_wind)], new BMap.Size(10,10));
        _pt_icon.setImageSize(new BMap.Size(10,10));
        _ptm = new BMap.Marker(point, {icon: _pt_icon});
        $('.current_time').html(_current_pt.time);
        $('#title .sub-title').html("等级:" + level_names[transform_level(_current_pt.max_wind)]);
        var content = build_content(_current_pt);

        addClickHandler(content, _ptm);
        map.addOverlay(_ptm);
        curr_point_idx += 1;
        draw_typhoon(d);
      }, d); 
    }

    var _typhoon2;
    function show_forecast() {
      var size, _ptm, curr_point_idx2;
      var curr_point_obj = current_typhoon.real_location[current_typhoon.real_location.length - 1];
      var curr_point = new BMap.Point(curr_point_obj.lon, curr_point_obj.lat);
      var forecast_location = current_typhoon.forecast_location;
      for (size in forecast_location) {
        var items = forecast_location[size];
        if ($.inArray(items[0].unit, show_units) < 0) {
          continue;
        }
        var _path = [curr_point]
        var curr_path_idx;
        var point;

        var _typhoon2 = new BMap.Polyline(_path, {strokeColor: dept_color(forecast_location[size][0].unit), strokeStyle: 'dashed', strokeWeight:2, strokeOpacity:1});
        var _current_pt, content;
        for (curr_point_idx2 in items) {
          _current_pt = items[curr_point_idx2];
          point = new BMap.Point(_current_pt.lon, _current_pt.lat)
          _path.push(point);
          _typhoon2.setPath(_path);
          _pt_icon = new BMap.Icon(typhoon_level_imgs[transform_level(_current_pt.max_wind)], new BMap.Size(10,10));
          _pt_icon.setImageSize(new BMap.Size(10,10));
          _ptm = new BMap.Marker(point, {icon: _pt_icon});
          content = build_content(_current_pt);
          addClickHandler(content, _ptm);
          map.addOverlay(_ptm);
        }
        map.addOverlay(_typhoon2);
      }
      can_run = true;
      $('.btn-group > .glyphicon-minus').removeClass('glyphicon-minus').addClass('glyphicon-play');
    }

    var seven_wind_radius, ten_wind_radius;
    function show_wind_radius(target) {
      map.removeOverlay(seven_wind_radius);
      map.removeOverlay(ten_wind_radius);
      var seven_wind_radius = new BMap.Circle(new BMap.Point(target.lon, target.lat), target.seven_radius * 1000, {strokeColor:"#ffce4a", fillColor: '#ffce4a', strokeWeight: 0.5, strokeOpacity:0.1});
      var ten_wind_radius = new BMap.Circle(new BMap.Point(target.lon, target.lat), target.ten_radius * 1000, {strokeColor:"#ffce4a", fillColor: '#ffce4a', strokeWeight: 0.5, strokeOpacity:0.5});
      map.addOverlay(ten_wind_radius);
      map.addOverlay(seven_wind_radius);
    }

    function addClickHandler(content, marker) {
      marker.addEventListener('click', function(e) {
        show_tips(content, e);
      });
    }

    function show_tips(content, e){
      var infowindow = new BMap.InfoWindow(content,{width:100,height:210,title: "[" + current_typhoon.name + "] " + current_typhoon.cname});
      map.openInfoWindow(infowindow,e.target.point);
    }

    
    function dept_color(dept) {
      var _color = "";
      if (dept == "中国") {
        _color = "#FF4050";
      } else if (dept == "中国香港") {
        _color = "#ff40f5";
      } else if (dept == "美国") {
        _color = "#40DDFF";
      } else if (dept == "中国台湾") {
        _color = "#FFA040";
      } else if (dept == "日本") {
        _color = "#43FF4B";
      } else {
        _color = "#000";
      }
      return _color;
    }

    function build_content(point) {
      var content = "<p>数据时间: " + point.time + "</p>";
      if (point.unit != null) {
        content += "<p>预报机构: "+ point.unit+"</p>";  
      }
      content += "<p>中心位置: " + point.lon + '°, ' + point.lat + "°</p>";
      content += "<p>最大风力: " + get_wind_level(point.max_wind) + " 级("+level_names[transform_level(point.max_wind)]+")</p>";
      if (point.max_wind == null && point.max_wind == 9999) {
        content += "<p>最大风速: - 米/秒</p>";
      } else {
        content += "<p>最大风速: " + point.max_wind + " 米/秒</p>";  
      }
      content += "<p>中心气压: " + ((point.min_pressure == null || point.min_pressure == 9999) ? "-" : point.min_pressure) + " 百帕</p>";
      if (point.seven_radius != null && point.seven_radius != 9999) {
        content += "<p>七级半径: " + point.seven_radius + " 公里</p>";  
      }
      if (point.ten_radius != null && point.ten_radius != 9999) {
        content += "<p>十级半径: " + point.ten_radius + " 公里</p>";  
      }
      
      return content;
    }

    $("#info").on('click', '.item', function(evt) {
      var _target = $(this).attr("data-target");
      $(this).toggleClass('gray');
      init_map();
      if ($(this).hasClass('gray')) {
          show_units.splice($.inArray(_target,show_units),1);
      } else {
        show_units.push(_target);
      }
      clearTimeout(timer);
      _typhoon.setPath(null);
      draw_typhoon(200);
    });

    $('#title').on('click', function(evt) {
      show_selector();
    });

    $('#typhoons_selector').on('click', 'li', function() {
      $(this).parent().children().removeClass('active');
      $(this).addClass('active');
      $("#typhoons_selector").hide();
      get_typhoon($(this).attr("data-target"));
    })

    function show_selector() {
      $("#typhoons_selector").show();
    }
    map.addEventListener('click', function() {
      $("#typhoons_selector").hide();  
    });

    $(document).on('click', function(e){
      if ($(e.target).closest('#title').length == 0) {
        $("#typhoons_selector").hide();  
      } else {
        show_selector();
      }
    });

  });
</script>
