// Generated by CoffeeScript 1.10.0
var drawAqi, drawCharts, drawNo2, drawO3, drawPm10, drawPm25;

drawAqi = function(ec) {
  var aqiChart, data, dataConfigs, option;
  dataConfigs = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = aqi_datas.length; i < len; i++) {
      data = aqi_datas[i];
      results.push({
        value: [new Date(data[0]), data[1]],
        itemStyle: {
          normal: {
            color: data[2]
          }
        }
      });
    }
    return results;
  })();
  aqiChart = ec.init(document.getElementById('aqi'));
  option = {
    grid: {
      height: 220,
      x: 30,
      x2: 16,
      y: 10,
      borderWidth: 0
    },
    xAxis: [
      {
        type: 'time',
        axisLabel: {
          formatter: function(value) {
            return (value.getHours()) + "时\n" + (value.getMonth() + 1) + "-" + (value.getDate());
          },
          textStyle: {
            color: "#4a4a4a"
          }
        },
        axisLine: {
          lineStyle: {
            color: '#fff',
            width: 0
          }
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            width: 0
          }
        }
      }
    ],
    yAxis: [
      {
        type: 'value',
        min: 0,
        max: 350,
        splitNumber: 7,
        axisLabel: {
          textStyle: {
            color: 'rgba(74,74,74,0.47)'
          }
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        },
        splitLine: {
          onGap: true,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        }
      }
    ],
    series: [
      {
        name: '空气质量',
        type: 'line',
        showAllSymbol: true,
        symbolSize: 3,
        itemStyle: {
          normal: {
            lineStyle: {
              color: '#4a4a4a',
              width: 1
            }
          }
        },
        data: dataConfigs
      }
    ]
  };
  return aqiChart.setOption(option);
};

drawPm25 = function(ec) {
  var data, dataConfigs, option, pm10Chart;
  dataConfigs = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = pm25_datas.length; i < len; i++) {
      data = pm25_datas[i];
      results.push({
        value: [new Date(data[0]), data[1]],
        itemStyle: {
          normal: {
            color: data[2]
          }
        }
      });
    }
    return results;
  })();
  pm10Chart = ec.init(document.getElementById('pm25'));
  option = {
    grid: {
      height: 220,
      x: 30,
      x2: 16,
      y: 10,
      borderWidth: 0
    },
    xAxis: [
      {
        type: 'time',
        axisLabel: {
          formatter: function(value) {
            return (value.getHours()) + "时\n" + (value.getMonth() + 1) + "-" + (value.getDate());
          },
          textStyle: {
            color: "#4a4a4a"
          }
        },
        axisLine: {
          lineStyle: {
            color: '#fff',
            width: 0
          }
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            width: 0
          }
        }
      }
    ],
    yAxis: [
      {
        type: 'value',
        min: 0,
        max: 350,
        splitNumber: 7,
        axisLabel: {
          textStyle: {
            color: 'rgba(74,74,74,0.47)'
          }
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        },
        splitLine: {
          onGap: true,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        }
      }
    ],
    series: [
      {
        name: 'PM10',
        type: 'line',
        showAllSymbol: true,
        symbolSize: 4,
        itemStyle: {
          normal: {
            lineStyle: {
              color: '#4a4a4a',
              width: 1
            }
          }
        },
        data: dataConfigs
      }
    ]
  };
  return pm10Chart.setOption(option);
};

drawO3 = function(ec) {
  var aqiChart, data, dataConfigs, option;
  dataConfigs = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = o3_datas.length; i < len; i++) {
      data = o3_datas[i];
      results.push({
        value: [new Date(data[0]), data[1]],
        itemStyle: {
          normal: {
            color: data[2]
          }
        }
      });
    }
    return results;
  })();
  aqiChart = ec.init(document.getElementById('o3'));
  option = {
    grid: {
      height: 220,
      x: 30,
      x2: 16,
      y: 10,
      borderWidth: 0
    },
    xAxis: [
      {
        type: 'time',
        axisLabel: {
          formatter: function(value) {
            return (value.getHours()) + "时\n" + (value.getMonth() + 1) + "-" + (value.getDate());
          },
          textStyle: {
            color: "#4a4a4a"
          }
        },
        axisLine: {
          lineStyle: {
            color: '#fff',
            width: 0
          }
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            width: 0
          }
        }
      }
    ],
    yAxis: [
      {
        type: 'value',
        min: 0,
        max: 350,
        splitNumber: 7,
        axisLabel: {
          textStyle: {
            color: 'rgba(74,74,74,0.47)'
          }
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        },
        splitLine: {
          onGap: true,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        }
      }
    ],
    series: [
      {
        name: '空气质量',
        type: 'line',
        showAllSymbol: true,
        symbolSize: 4,
        itemStyle: {
          normal: {
            lineStyle: {
              color: '#4a4a4a',
              width: 1
            }
          }
        },
        data: dataConfigs
      }
    ]
  };
  return aqiChart.setOption(option);
};

drawPm10 = function(ec) {
  var aqiChart, data, dataConfigs, option;
  dataConfigs = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = pm10_datas.length; i < len; i++) {
      data = pm10_datas[i];
      results.push({
        value: [new Date(data[0]), data[1]],
        itemStyle: {
          normal: {
            color: data[2]
          }
        }
      });
    }
    return results;
  })();
  aqiChart = ec.init(document.getElementById('pm10'));
  option = {
    grid: {
      height: 220,
      x: 30,
      x2: 16,
      y: 10,
      borderWidth: 0
    },
    xAxis: [
      {
        type: 'time',
        axisLabel: {
          formatter: function(value) {
            return (value.getHours()) + "时\n" + (value.getMonth() + 1) + "-" + (value.getDate());
          },
          textStyle: {
            color: "#4a4a4a"
          }
        },
        axisLine: {
          lineStyle: {
            color: '#fff',
            width: 0
          }
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            width: 0
          }
        }
      }
    ],
    yAxis: [
      {
        type: 'value',
        min: 0,
        max: 350,
        splitNumber: 7,
        axisLabel: {
          textStyle: {
            color: 'rgba(74,74,74,0.47)'
          }
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        },
        splitLine: {
          onGap: true,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        }
      }
    ],
    series: [
      {
        name: '空气质量',
        type: 'line',
        showAllSymbol: true,
        symbolSize: 4,
        itemStyle: {
          normal: {
            lineStyle: {
              color: '#4a4a4a',
              width: 1
            }
          }
        },
        data: dataConfigs
      }
    ]
  };
  return aqiChart.setOption(option);
};

drawNo2 = function(ec) {
  var data, dataConfigs, no2Chart, option;
  dataConfigs = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = no2_datas.length; i < len; i++) {
      data = no2_datas[i];
      results.push({
        value: [new Date(data[0]), data[1]],
        itemStyle: {
          normal: {
            color: data[2]
          }
        }
      });
    }
    return results;
  })();
  no2Chart = ec.init(document.getElementById('no2'));
  option = {
    grid: {
      height: 220,
      x: 30,
      x2: 16,
      y: 10,
      borderWidth: 0
    },
    xAxis: [
      {
        type: 'time',
        axisLabel: {
          formatter: function(value) {
            return (value.getHours()) + "时\n" + (value.getMonth() + 1) + "-" + (value.getDate());
          },
          textStyle: {
            color: "#4a4a4a"
          }
        },
        axisLine: {
          lineStyle: {
            color: '#fff',
            width: 0
          }
        },
        axisTick: {
          show: false
        },
        splitLine: {
          lineStyle: {
            width: 0
          }
        }
      }
    ],
    yAxis: [
      {
        type: 'value',
        min: 0,
        max: 350,
        splitNumber: 7,
        axisLabel: {
          textStyle: {
            color: 'rgba(74,74,74,0.47)'
          }
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        },
        splitLine: {
          onGap: true,
          lineStyle: {
            color: 'rgba(155,155,155,0.54)'
          }
        }
      }
    ],
    series: [
      {
        name: '空气质量',
        type: 'line',
        showAllSymbol: true,
        symbolSize: 4,
        itemStyle: {
          normal: {
            lineStyle: {
              color: '#4a4a4a',
              width: 1
            }
          }
        },
        data: dataConfigs
      }
    ]
  };
  return no2Chart.setOption(option);
};

drawCharts = function(ec) {
  drawAqi(ec);
  drawPm10(ec);
  drawO3(ec);
  drawPm25(ec);
  return drawNo2(ec);
};

$(function() {
  require.config({
    paths: {
      echarts: 'http://echarts.baidu.com/build/dist'
    }
  });
  require(['echarts', 'echarts/chart/line'], drawCharts);
  return $('a[data-toggle="tab"]').on('shown.bs.tab', function(e) {
    require.config({
      paths: {
        echarts: 'http://echarts.baidu.com/build/dist'
      }
    });
    return require(['echarts', 'echarts/chart/line'], drawCharts);
  });
});
